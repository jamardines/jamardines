import java.io.*;
import java.util.*;

public class ExpressionChecker {
    public static boolean isWellDefined(String expression) {
        Stack<Character> stack = new Stack<>();

        for (char ch : expression.toCharArray()) {
            if (ch == '(' || ch == '{' || ch == '[') {
                stack.push(ch);
            }
    
            else if (ch == ')' || ch == '}' || ch == ']') {
                if (stack.isEmpty()) {
                    return false;
                }

                char top = stack.pop();
                if ((ch == ')' && top != '(') || (ch == '}' && top != '{') || (ch == ']' && top != '[')) {
                    return false;
                }
            }
        }
        return stack.isEmpty();
    }

    public static void main(String[] args) {
        String filename = "expressions.txt";

        try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {
            String expression;
            int lineNumber = 1;

            while ((expression = reader.readLine()) != null) {
                boolean result = isWellDefined(expression);     
                if (result) {
                    System.out.println("Expression " + lineNumber + ": Well Defined");
                } else {
                    System.out.println("Expression " + lineNumber + ": Not Well Defined");
                }
                lineNumber++;
            }
        } catch (IOException e) {
            System.err.println("Error reading file: " + e.getMessage());
        }
    }
}
